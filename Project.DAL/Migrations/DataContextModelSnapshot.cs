// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.DAL;

#nullable disable

namespace Project.DAL.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project.DAL.Entities.VehicleMakeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abrv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VehicleMakes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abrv = "VW",
                            Name = "Volkswagen"
                        },
                        new
                        {
                            Id = 2,
                            Abrv = "audi",
                            Name = "Audi"
                        },
                        new
                        {
                            Id = 3,
                            Abrv = "BMW",
                            Name = "Bavarian Motor Works"
                        });
                });

            modelBuilder.Entity("Project.DAL.Entities.VehicleModelEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abrv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleMakeEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleMakeEntityId");

                    b.ToTable("VehicleModels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abrv = "VW",
                            Name = "Golf 7",
                            VehicleMakeEntityId = 1
                        },
                        new
                        {
                            Id = 2,
                            Abrv = "audi",
                            Name = "A4",
                            VehicleMakeEntityId = 2
                        },
                        new
                        {
                            Id = 3,
                            Abrv = "BMW",
                            Name = "M4",
                            VehicleMakeEntityId = 3
                        });
                });

            modelBuilder.Entity("Project.DAL.Entities.VehicleModelEntity", b =>
                {
                    b.HasOne("Project.DAL.Entities.VehicleMakeEntity", "VehicleMakeEntitys")
                        .WithMany("VehicleModelEntitys")
                        .HasForeignKey("VehicleMakeEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleMakeEntitys");
                });

            modelBuilder.Entity("Project.DAL.Entities.VehicleMakeEntity", b =>
                {
                    b.Navigation("VehicleModelEntitys");
                });
#pragma warning restore 612, 618
        }
    }
}
